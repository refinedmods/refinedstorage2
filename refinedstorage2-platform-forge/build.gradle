buildscript {
    repositories {
        maven {
            url = 'https://maven.minecraftforge.net'
        }
    }
}

plugins {
    alias(forge.plugins.forgeGradle)
}

repositories {
    maven {
        name = 'JEI'
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        name = 'REI'
        url 'https://maven.shedaniel.me/'
    }
}

archivesBaseName = 'refinedstorage2-platform-forge'

minecraft {
    mappings channel: 'official', version: forge.versions.minecraft.get()
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'Client'
            mods {
                modClientRun {
                    source sourceSets.main
                    project.ext.apis.collect {
                        source(project(it).sourceSets.main)
                    }
                    project.ext.compileApis.collect {
                        source(project(it).sourceSets.main)
                    }
                }
            }
        }

        server {
            workingDirectory project.file('run')
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'Server'
            mods {
                modServerRun {
                    source sourceSets.main
                    project.ext.apis.collect {
                        source(project(it).sourceSets.main)
                    }
                    project.ext.compileApis.collect {
                        source(project(it).sourceSets.main)
                    }
                }
            }
        }
    }
}

sourceSets.main.resources.srcDir 'src/generated/resources'

dependencies {
    minecraft forge.minecraft

    project.ext.apis.collect {
        implementation project(it)
    }
    project.ext.compileApis.collect {
        implementation project(it)
    }

    implementation libs.apiguardian // mandatory as it's imported through platform-api

    compileOnly fg.deobf(forge.jei.common.api.get())
    testCompileOnly fg.deobf(forge.jei.common.api.get())
    compileOnly fg.deobf(forge.jei.forge.api.get())
    // We test with JEI on Forge.
    runtimeOnly fg.deobf(forge.jei.forge.impl.get())

    compileOnly fg.deobf(forge.rei.forge.get())
}

processResources {
    from project(":refinedstorage2-platform-common").sourceSets.main.resources
}

tasks.withType(JavaCompile) {
    project.ext.apis.collect {
        source(project(it).sourceSets.main.allSource)
    }
    project.ext.compileApis.collect {
        source(project(it).sourceSets.main.allSource)
    }
}

jar.finalizedBy('reobfJar')

