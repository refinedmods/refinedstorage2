name: Build
on: [push, pull_request]
jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout repository
                uses: actions/checkout@v3
                with:
                    fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
            -   name: Validate Gradle wrapper
                uses: gradle/wrapper-validation-action@v1
            -   name: Setup JDK 17
                uses: actions/setup-java@v3.9.0
                with:
                    distribution: 'temurin'
                    java-version: 17
            # https://docs.sonarqube.org/latest/analysis/github-integration/
            -   name: Cache SonarQube packages
                uses: actions/cache@v3
                with:
                    path: ~/.sonar/cache
                    key: ${{ runner.os }}-sonar
                    restore-keys: ${{ runner.os }}-sonar
            -   name: Cache Gradle packages
                uses: actions/cache@v3
                with:
                    path: ~/.gradle/caches
                    key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
                    restore-keys: ${{ runner.os }}-gradle
            -   name: Make Gradle wrapper executable
                if: ${{ runner.os != 'Windows' }}
                run: chmod +x ./gradlew
            -   name: Build and test
                if: ${{ github.event.pull_request.head.repo.fork }}
                run: ./gradlew build codeCoverageReport
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            # TODO: We have to disable Sonar for now on forked PR builds as the analyze fails due to permission issues.
            -   name: Build, test and analyze
                if: ${{ !github.event.pull_request.head.repo.fork }}
                run: ./gradlew build codeCoverageReport sonarqube
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            -   name: Mutation testing
                run: ./gradlew pitest
            -   name: Publish test report
                uses: mikepenz/action-junit-report@v3
                if: always() # always run even if the previous step fails
                with:
                    report_paths: '**/build/test-results/test/TEST-*.xml'
            -   name: Upload build artifacts
                if: ${{ runner.os == 'Linux' }}
                uses: actions/upload-artifact@v3
                with:
                    name: Artifacts
                    path: '**/build/libs/'
