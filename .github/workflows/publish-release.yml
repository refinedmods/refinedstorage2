name: Publish release
on:
  pull_request:
    branches:
      - main
      - releasetargettest
    types:
      - closed
jobs:
  extract-version-number:
    name: Extract version number
    runs-on: ubuntu-latest
    outputs:
      version: ${{ env.RELEASE_VERSION }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Extract version from release branch name
        if: startsWith(github.event.pull_request.head.ref, 'release/')
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          VERSION=${BRANCH_NAME#release/}
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
      - name: Extract version from hotfix branch name
        if: startsWith(github.event.pull_request.head.ref, 'hotfix/')
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          VERSION=${BRANCH_NAME#hotfix/}
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV

  extract-changelog:
    name: Extract changelog
    runs-on: ubuntu-latest
    needs: extract-version-number
    outputs:
      changelog: ${{ steps.changelog_reader.outputs.changes }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Extract changelog
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2.2.2
        with:
          version: ${{ needs.extract-version-number.outputs.version }}
          path: ./CHANGELOG.md

  build:
    name: Build
    needs: extract-version-number
    uses: ./.github/workflows/build.yml
    with:
      version: ${{ needs.extract-version-number.outputs.version }}
    secrets: inherit

  publish-maven:
    name: Publish Maven packages
    runs-on: ubuntu-latest
    needs: [ build, extract-version-number ]
    env:
      RELEASE_VERSION: ${{ needs.extract-version-number.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Java
        uses: ./.github/actions/setup-java
      - name: Publish to Maven
        run: ./gradlew publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CREEPERHOST_MAVEN_USERNAME: ${{ secrets.CREEPERHOST_MAVEN_USERNAME }}
          CREEPERHOST_MAVEN_TOKEN: ${{ secrets.CREEPERHOST_MAVEN_TOKEN }}

  publish-javadoc:
    name: Publish Javadoc
    runs-on: ubuntu-latest
    needs: [ build, extract-version-number ]
    env:
      RELEASE_VERSION: ${{ needs.extract-version-number.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Java
        uses: ./.github/actions/setup-java
      - name: Build documentation
        run: ./gradlew allJavadoc
      - name: Publish documentation
        uses: JamesIves/github-pages-deploy-action@v4.4.1
        with:
          branch: gh-pages
          folder: build/docs/javadoc

  deploy-github-releases:
    name: Deploy to GitHub Releases
    runs-on: ubuntu-latest
    needs: [ build, extract-version-number, extract-changelog ]
    outputs:
      release-url: ${{ steps.gh_release.outputs.url }}
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: Artifacts
      - name: Deploy to GitHub Releases
        uses: softprops/action-gh-release@v0.1.15
        id: gh_release
        with:
          body: ${{ needs.extract-changelog.outputs.changelog }}
          name: 'v${{ needs.extract-version-number.outputs.version }}'
          tag_name: 'v${{ needs.extract-version-number.outputs.version }}'
          target_commitish: ${{ github.event.pull_request.merge_commit_sha }}
          files: |
            **/build/libs/*.jar

  announce-discord:
    name: Announce to Discord
    runs-on: ubuntu-latest
    needs: [ deploy-github-releases, extract-version-number ]
    env:
      RELEASE_VERSION: ${{ needs.extract-version-number.outputs.version }}
      RELEASE_URL: ${{ needs.deploy-github-releases.outputs.release-url }}
    steps:
      - name: Announce to Twitter
        uses: Ilshidur/action-discord@0.3.2
        with:
          args: 'Refined Storage v{{ RELEASE_VERSION }} has been released! {{ RELEASE_URL }}'
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}

  announce-twitter:
    name: Announce to Twitter
    runs-on: ubuntu-latest
    needs: [ deploy-github-releases, extract-version-number ]
    steps:
      - name: Announce to Twitter
        uses: ethomson/send-tweet-action@v1
        with:
          status: Refined Storage v${{ needs.extract-version-number.outputs.version }} has been released! ${{ needs.deploy-github-releases.outputs.release }}
          consumer-key: ${{ secrets.TWITTER_CONSUMER_API_KEY }}
          consumer-secret: ${{ secrets.TWITTER_CONSUMER_API_SECRET }}
          access-token: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          access-token-secret: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}

  sync-develop:
    name: Sync develop
    runs-on: ubuntu-latest
    steps:
      - name: Create PR for merging main back into develop
        uses: thomaseizinger/create-pull-request@1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          head: main
          base: develop
          title: Merge main into develop branch
          body: |
            This PR merges the main branch back into develop.
            This is to ensure that the updates that happened on the release branch, i.e. CHANGELOG and version updates are also present on the develop branch.
