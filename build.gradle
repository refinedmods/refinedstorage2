plugins {
    id 'maven-publish'
    id 'org.sonarqube' version "3.3"
    id 'checkstyle'
}

allprojects {
    apply plugin: 'jacoco'
}

subprojects {
    group = 'com.refinedmods.refinedstorage2'
    version = '2.0.0-milestone.2.0'

    if (System.getenv('GITHUB_SHA') != null) {
        version += '+' + System.getenv('GITHUB_SHA').substring(0, 7)
    }

    if (System.getenv('RELEASE') != null) {
        version = System.getenv('RELEASE').substring(1) // remove 'v'
    }

    project.ext.apis = [
            ':refinedstorage2-core-api',
            ':refinedstorage2-resource-api',
            ':refinedstorage2-storage-api',
            ':refinedstorage2-network-api',
            ':refinedstorage2-grid-api',
            ':refinedstorage2-query-parser'
    ]

    project.ext.compileApis = [
            ':refinedstorage2-platform-api',
            ':refinedstorage2-platform-common',
    ]

    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'checkstyle'

    checkstyle {
        configFile rootProject.file("checkstyle.xml")
        toolVersion = project.checkstyleVersion
        checkstyleTest.enabled = false
    }

    java.toolchain.languageVersion = JavaLanguageVersion.of(17)

    tasks.withType(JavaCompile).configureEach {
        it.options.encoding = 'UTF-8'
        it.options.release = 17
    }

    processResources {
        inputs.property 'version', project.version

        filesMatching(['fabric.mod.json', 'META-INF/mods.toml']) {
            expand 'version': project.version
        }
    }

    apply plugin: "maven-publish"
    publishing {
        repositories {
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/refinedmods/refinedstorage2")
                credentials {
                    username = System.getenv("GITHUB_ACTOR")
                    password = System.getenv("GITHUB_TOKEN")
                }
            }
            maven {
                name = "CreeperHost"
                url = uri("https://maven.creeperhost.net/release")
                credentials {
                    username = System.getenv("CREEPERHOST_MAVEN_USERNAME")
                    password = System.getenv("CREEPERHOST_MAVEN_TOKEN")
                }
            }
        }
        publications {
            gpr(MavenPublication) {
                from(components.java)
            }
        }
    }

    dependencies {
        implementation "org.apiguardian:apiguardian-api:${project.apiGuardianVersion}"
        implementation "com.google.code.findbugs:jsr305:${project.jsr305Version}"
    }
}

task allJavadoc(type: Javadoc) {
    source subprojects*.sourceSets.main.allJava
    classpath += files(subprojects*.sourceSets.main.compileClasspath)
    destinationDir = file("build/docs/javadoc")
}

// http://csiebler.github.io/blog/2014/02/09/multi-project-code-coverage-using-gradle-and-jacoco/
task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")
    subprojects.each {
        sourceSets it.sourceSets.main
    }
    reports {
        html.required = true
        xml.required = true
    }
}

// always run the tests before generating the report
codeCoverageReport.dependsOn {
    subprojects*.test
}

// https://docs.sonarqube.org/latest/analysis/github-integration/
sonarqube {
    properties {
        property "sonar.projectKey", "refinedmods_refinedstorage2"
        property "sonar.organization", "refinedmods"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/reports/jacoco/codeCoverageReport/codeCoverageReport.xml"
        property "sonar.coverage.exclusions", "refinedstorage2-platform-forge/**/*,refinedstorage2-platform-fabric/**/*,refinedstorage2-platform-common/**/*,refinedstorage2-platform-api/**/*"
        // JEI/REI code is duplicated as reusing it in a common module isn't possible/too difficult.
        property "sonar.cpd.exclusions", "refinedstorage2-platform-forge/src/main/java/com/refinedmods/refinedstorage2/platform/forge/integration/jei/*,refinedstorage2-platform-forge/src/main/java/com/refinedmods/refinedstorage2/platform/forge/integration/rei/*,refinedstorage2-platform-fabric/src/main/java/com/refinedmods/refinedstorage2/platform/fabric/integration/jei/*,refinedstorage2-platform-fabric/src/main/java/com/refinedmods/refinedstorage2/platform/fabric/integration/rei/*"
    }
}
