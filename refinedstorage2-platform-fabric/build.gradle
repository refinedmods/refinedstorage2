plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
}

archivesBaseName = 'refinedstorage2-platform-fabric'

repositories {
    maven {
        name = 'JEI'
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        name = 'REI'
        url 'https://maven.terraformersmc.com/'
    }
    maven {
        name = 'Cloth Config'
        url 'https://maven.shedaniel.me/'
    }
    maven {
        name = 'Parchment'
        url 'https://maven.parchmentmc.org'
    }
    maven {
        name = 'wthit'
        url "https://maven.bai.lol"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraftVersion}"
    mappings loom.layered() {
        officialMojangMappings()
/* TODO        parchment("org.parchmentmc.data:parchment-${project.minecraftVersion}:${project.parchmentVersion}@zip")*/
    }
    modImplementation "net.fabricmc:fabric-loader:${project.fabricLoaderVersion}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabricApiVersion}"

    project.ext.apis.collect {
        implementation project(it)
        include project(it)
    }
    project.ext.compileApis.collect {
        implementation project(it)
    }

    modApi("me.shedaniel.cloth:cloth-config-fabric:${project.clothConfigVersion}") {
        exclude(group: 'net.fabricmc.fabric-api')
    }
    include "me.shedaniel.cloth:cloth-config-fabric:${project.clothConfigVersion}"

    modApi("teamreborn:energy:${project.energyVersion}") {
        exclude(group: 'net.fabricmc.fabric-api')
    }
    include "teamreborn:energy:${project.energyVersion}"

    modCompileOnly("me.shedaniel:RoughlyEnoughItems-api:${project.reiVersion}") {
        exclude(group: 'me.shedaniel.cloth')
    }
    modRuntimeOnly("me.shedaniel:RoughlyEnoughItems-fabric:${project.reiVersion}")

    modCompileOnlyApi "mezz.jei:jei-${project.minecraftVersion}-common-api:${project.jeiVersion}"
    modCompileOnlyApi "mezz.jei:jei-${project.minecraftVersion}-fabric-api:${project.jeiVersion}"
    // modRuntimeOnly "mezz.jei:jei-${project.minecraftVersion}-fabric:${project.jeiVersion}"

    modImplementation "com.terraformersmc:modmenu:${project.modMenuVersion}"

    modRuntimeOnly("mcp.mobius.waila:wthit:fabric-${project.wthitVersion}")
}

loom {
    accessWidenerPath = file("src/main/resources/refinedstorage2.accesswidener")
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }
}

processResources {
    from project(":refinedstorage2-platform-common").sourceSets.main.resources
}

tasks.withType(JavaCompile) {
    project.ext.compileApis.collect {
        source(project(it).sourceSets.main.allSource)
    }
}

jar {
    from '../LICENSE.md'
}
